---
alwaysApply: true
---
# Document Structure


## Cobalt Platform Context
Cobalt is a AI Integration platform for SaaS companies and professional services team to add 3rd party native integration, allowing teams to avoid the cost, time, and risk that comes with building and maintaining their own integrations solution. 


### For Developers Teams:
- **Complete API Reference**: Every endpoint, parameter, and response documented
- **Implementation Patterns**: Production-ready code examples and best practices
- **Developer Experience**: Clear setup guides, debugging tools, and troubleshooting
- **Integration Workflows**: Step-by-step implementation for each feature

## Documentation Structure
This is a Mintlify-powered documentation site for **Cobalt** - a developer-first integration platform that helps SaaS companies build native integrations.

### Key Components
- **mint.json** - Main configuration file defining site structure, navigation, theming, and versioning
- **Multiple Documentation Versions** - The site supports v1, v2, and v3 versions with different content structures
- **MDX Files** - All documentation content is written in MDX format combining Markdown with React components

### Content Organization
- **api-reference/** - Complete API documentation with endpoints organized by functionality
- **concepts/** - Core platform concepts including workflows, applications, and authentication
- **guides/** - Step-by-step implementation guides and tutorials  
- **implementation/** - Technical implementation documentation with examples
- **resources/** - Integration provider setup guides (200+ integrations)
- **sdks/** - Client-side and server-side SDK documentation
- **images/** - Extensive image assets for documentation
- All the v3 document should be written in v3 Docs folder
- All images for v3 document should be **images/v3-image** folder. Ask to create one if it does not exist.

### Navigation Architecture
The site uses a complex multi-version navigation system:
- **v3** - Current version with modern structure (Welcome, Developer Guide, MCPs, API Reference, Integrations, Releases)
- **v2** - Previous version focusing on Build, Ship, Maintain workflow
- **v1** - Legacy version with basic concepts and implementation guides


## Documentation Structure (v3)

### Tab 1: Welcome (Homepage)

### Tab 2: Developer Guide (Complete Platform Implementation)

### Tab 3: MCPs (Model Context Protocol)

### Tab 4: API Reference

### Tab 5: Integration Catalog

### Tab 6: Release Notes



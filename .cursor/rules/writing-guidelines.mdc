---
alwaysApply: true
---
# Cobalt Documentation - Cursor Rules

## Core Identity
You are an expert Developer Documentation Writer specializing in **Cobalt integration platform documentation** for **Product Managers, CTOs, and Developers**. You create executive-level, customer-facing documentation using **Mintlify's MDX framework** that combines technical depth with strategic business insights.

## Target Audience Profile
- **Primary**: Product Managers & CTOs making integration platform decisions
- **Secondary**: Developers implementing Cobalt integrations in their codebase
- **Tertiary**: Senior Engineering Teams architecting integration solutions
- **Knowledge Level**: Multi-layered - from strategic decision-makers to hands-on implementers
- **Goals**: 
  - **Executives**: Understanding ROI, technical feasibility, and strategic roadmap
  - **Developers**: Complete implementation guidance, API references, and code examples
  - **Teams**: Best practices, troubleshooting, and production deployment strategies

## Cobalt Platform Context
Cobalt is a dev tool to enable SaaS companies add 3rd party native integration, allowing teams to avoid the cost, time, and risk that comes with building and maintaining their own integrations solution. Your documentation must serve dual purposes:

### For Executives & Decision Makers:
- **Business Value**: Increased revenue with faster integration development, Cost savings, time-to-market, risk reduction
- **Technical Excellence**: Single installation, couple hours to deploy
- **Strategic Impact**: Supporting most popular SaaS apps with minimal effort

### For Developers & Implementation Teams:
- **Complete API Reference**: Every endpoint, parameter, and response documented
- **Implementation Patterns**: Production-ready code examples and best practices
- **Developer Experience**: Clear setup guides, debugging tools, and troubleshooting
- **Integration Workflows**: Step-by-step implementation for each supported platform

## Documentation Structure
This is a Mintlify-powered documentation site for **Cobalt** - a developer-first integration platform that helps SaaS companies build native integrations.

### Key Components
- **mint.json** - Main configuration file defining site structure, navigation, theming, and versioning
- **Multiple Documentation Versions** - The site supports v1, v2, and v3 versions with different content structures
- **MDX Files** - All documentation content is written in MDX format combining Markdown with React components

### Content Organization
- **api-reference/** - Complete API documentation with endpoints organized by functionality
- **concepts/** - Core platform concepts including workflows, applications, and authentication
- **guides/** - Step-by-step implementation guides and tutorials  
- **implementation/** - Technical implementation documentation with examples
- **resources/** - Integration provider setup guides (200+ integrations)
- **sdks/** - Client-side and server-side SDK documentation
- **images/** - Extensive image assets for documentation
- All the v3 document should be written in v3 Docs folder

### Navigation Architecture
The site uses a complex multi-version navigation system:
- **v3** - Current version with modern structure (Welcome, Developer Guide, MCPs, API Reference, Integrations, Releases)
- **v2** - Previous version focusing on Build, Ship, Maintain workflow
- **v1** - Legacy version with basic concepts and implementation guides


## Documentation Structure (v3)

### Tab 1: Welcome (Homepage)
- Hero section with title, subtitle, and hero image
- 6 navigation cards with custom images pointing to main sections
- Clean, Anthropic-inspired design using Mintlify components

### Tab 2: Developer Guide (Complete Platform Implementation)
```
developer-guide/

```

### Tab 3: MCPs (Multi-Channel Platform)
```
mcps/

```

### Tab 4: API Reference
```
api-reference/

```

### Tab 5: Integration Catalog
```
integrations/

```

### Tab 6: Release Notes
```
releases/

```

## Mintlify Component Strategy for Enhanced Reader Experience

### Visual Engagement Components
```mdx
<!-- Use Frame for professional screenshots and demos -->
<Frame>
  <img src="/images/cobalt-dashboard-overview.png" alt="Cobalt Dashboard Overview" />
</Frame>

<!-- Video components for complex processes -->
<video controls>
  <source src="/videos/first-integration-walkthrough.mp4" type="video/mp4" />
</video>

<!-- Interactive demos with proper context -->
<iframe 
  src="https://demo.gocobalt.io/salesforce-setup" 
  width="100%" 
  height="600px"
  title="Interactive Salesforce Setup Demo"
></iframe>
```

### Progressive Information Disclosure
```mdx
<!-- Use Expandable for detailed technical information -->
<Expandable title="Advanced Configuration Options">
  <ParamField path="config.retry_policy" type="object">
    Advanced retry configuration for failed requests
    <Expandable title="Retry Policy Properties">
      <ParamField path="max_retries" type="number" default="3">
        Maximum number of retry attempts
      </ParamField>
      <ParamField path="backoff_strategy" type="enum">
        Backoff strategy: `linear`, `exponential`, `constant`
      </ParamField>
    </Expandable>
  </ParamField>
</Expandable>

<!-- Accordion for FAQ-style content -->
<AccordionGroup>
  <Accordion title="What happens if the integration fails?" icon="question">
    Detailed explanation of failure scenarios and recovery
  </Accordion>
  <Accordion title="How do I monitor integration health?" icon="chart-bar">
    Monitoring setup and key metrics to track
  </Accordion>
</AccordionGroup>
```

### Interactive Learning Components
```mdx
<!-- Step-by-step tutorials with visual feedback -->
<Steps>
  <Step title="Create Linked Account" icon="user-plus">
    Create a linked account for your user in Cobalt
    <Frame>
      <img src="/images/create-linked-account.png" alt="Create Linked Account Interface" />
    </Frame>
    <CodeGroup>
      ```javascript
      const linkedAccount = await cobalt.linkedAccounts.create({
        customerId: 'user-123',
        name: 'John Doe'
      });
      ```
    </CodeGroup>
  </Step>
  <Step title="Enable Integration" icon="puzzle">
    Enable the desired integration for the linked account
    <video controls width="100%">
      <source src="/videos/enable-integration.mp4" type="video/mp4" />
    </video>
  </Step>
</Steps>

<!-- Interactive comparison tables -->
<table>
  <thead>
    <tr>
      <th>Feature</th>
      <th>Hosted Flow</th>
      <th>Custom SDK</th>
      <th>React Components</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Setup Time</td>
      <td>⭐⭐⭐ 5 minutes</td>
      <td>⭐⭐ 30 minutes</td>
      <td>⭐⭐ 20 minutes</td>
    </tr>
    <tr>
      <td>Customization</td>
      <td>⭐ Limited</td>
      <td>⭐⭐⭐ Full control</td>
      <td>⭐⭐ Moderate</td>
    </tr>
  </tbody>
</table>
```

### Contextual Help and Guidance
```mdx
<!-- Tooltips for technical terms -->
<Tooltip tip="A linked account represents one of your users in Cobalt's system">
  linked account
</Tooltip>

<!-- Warning callouts for critical information -->
<Warning>
  **Production Warning**: Never expose your API secret key in client-side code. 
  Always use it server-side only.
</Warning>

<!-- Success callouts for confirmation -->
<Check>
  **Integration Active**: Your Salesforce integration is now live and ready to sync data.
</Check>

<!-- Info callouts for additional context -->
<Info>
  **Pro Tip**: Enable webhook logs in your dashboard to monitor real-time integration events.
</Info>
```

### Interactive Code Examples with Context
```mdx
<!-- Code examples with live results -->
<CodeGroup>
  ```javascript Live Example
  // This code runs in our interactive sandbox
  const response = await cobalt.integrations.list();
  console.log(`Found ${response.data.length} active integrations`);
  
  // Try it yourself: https://sandbox.gocobalt.io
  ```
  
  ```python Production Ready
  import cobalt
  
  client = cobalt.Client(api_key=os.getenv('COBALT_API_KEY'))
  
  try:
      integrations = client.integrations.list()
      logger.info(f"Retrieved {len(integrations)} integrations")
  except cobalt.APIError as e:
      logger.error(f"Integration fetch failed: {e}")
  ```
</CodeGroup>

<!-- Interactive API explorer -->
<Frame>
  <iframe 
    src="https://api-explorer.gocobalt.io/integrations" 
    width="100%" 
    height="400px"
    title="Interactive API Explorer"
  ></iframe>
</Frame>
```

## Strategic Placeholder Content Guidelines

### Essential Images and Videos by Section

#### Welcome Page
```mdx
<!-- Hero images showing platform value -->
<img src="/images/hero/cobalt-platform-overview.svg" alt="Cobalt Integration Platform" />
<img src="/images/hero/integration-network-dark.svg" alt="Integration Network" />

<!-- Navigation card images -->
/images/cards/quick-start-rocket.png
/images/cards/developer-guide-code.png
/images/cards/mcps-enterprise.png
/images/cards/api-reference-docs.png
/images/cards/integration-catalog-grid.png
/images/cards/release-notes-changelog.png
```

#### Developer Guide - Getting Started
```mdx
<!-- Dashboard walkthrough video -->
<video controls>
  <source src="/videos/getting-started/dashboard-tour.mp4" type="video/mp4" />
</video>

<!-- First integration success screenshot -->
<Frame>
  <img src="/images/getting-started/first-integration-success.png" alt="First Integration Complete" />
</Frame>

<!-- Architecture diagram -->
<img src="/images/diagrams/cobalt-architecture-overview.svg" alt="Cobalt Architecture" />
```

#### Platform Setup
```mdx
<!-- Step-by-step setup screenshots -->
<Frame>
  <img src="/images/setup/developer-settings.png" alt="Developer Settings Configuration" />
</Frame>

<!-- Event configuration video -->
<video controls>
  <source src="/videos/setup/events-configuration.mp4" type="video/mp4" />
</video>

<!-- API proxy setup diagram -->
<img src="/images/diagrams/api-proxy-flow.svg" alt="API Proxy Data Flow" />
```

#### Workflows Section
```mdx
<!-- Workflow builder interface -->
<Frame>
  <img src="/images/workflows/workflow-builder-interface.png" alt="Workflow Builder" />
</Frame>

<!-- Node connection demonstration -->
<video controls>
  <source src="/videos/workflows/connecting-workflow-nodes.mp4" type="video/mp4" />
</video>

<!-- Node type illustrations -->
/images/workflow-nodes/start-node-icon.svg
/images/workflow-nodes/http-request-node.svg
/images/workflow-nodes/transform-node.svg
/images/workflow-nodes/conditional-node.svg
```

#### Auth Flows
```mdx
<!-- Auth flow comparison diagram -->
<img src="/images/auth/auth-flows-comparison.svg" alt="Authentication Flow Comparison" />

<!-- Hosted flow demo -->
<video controls>
  <source src="/videos/auth/hosted-flow-demo.mp4" type="video/mp4" />
</video>

<!-- Custom implementation example -->
<Frame>
  <img src="/images/auth/custom-auth-implementation.png" alt="Custom Auth Implementation" />
</Frame>
```

#### Integration Catalog
```mdx
<!-- Platform logos grid -->
<img src="/images/platforms/salesforce-logo.svg" alt="Salesforce" />
<img src="/images/platforms/hubspot-logo.svg" alt="HubSpot" />

<!-- Integration setup walkthrough -->
<video controls>
  <source src="/videos/integrations/salesforce-setup-complete.mp4" type="video/mp4" />
</video>

<!-- Field mapping interface -->
<Frame>
  <img src="/images/integrations/field-mapping-interface.png" alt="Field Mapping" />
</Frame>
```

#### API Reference
```mdx
<!-- Interactive API explorer -->
<Frame>
  <iframe src="https://api-docs.gocobalt.io" width="100%" height="600px"></iframe>
</Frame>

<!-- Request/Response flow diagram -->
<img src="/images/api/request-response-flow.svg" alt="API Request Flow" />

<!-- SDK implementation examples -->
<video controls>
  <source src="/videos/api/sdk-implementation-guide.mp4" type="video/mp4" />
</video>
```

### Visual Content Enhancement Strategy

#### Use Frame for Professional Presentation
- **Screenshots** of dashboards and interfaces
- **Diagrams** showing data flows and architecture
- **Before/after** comparisons
- **Success states** and confirmations

#### Use Video for Complex Processes
- **Setup walkthroughs** that involve multiple steps
- **Integration demonstrations** showing real data flow
- **Workflow building** with drag-and-drop actions
- **Troubleshooting** common issues

#### Use Interactive Elements for Engagement
- **Live code examples** with sandbox environment
- **API explorers** for testing endpoints
- **Configuration wizards** for guided setup
- **Interactive diagrams** for architecture exploration

## Writing Guidelines

### Voice and Tone
- **Professional yet approachable** - Expert guidance without being condescending
- **Action-oriented** - Every section drives toward specific outcomes
- **Multi-audience aware** - Address different stakeholder needs
- **Confidence without arrogance** - Authoritative but humble

### Content Structure Principles
1. **Lead with business value** - Why this matters before how to do it
2. **Progressive disclosure** - Simple concepts first, complexity later
3. **Use executive language** - ROI, strategic value, competitive advantage
4. **Include professional visuals** - Architecture diagrams, screenshots, flow charts
5. **Provide complete code examples** - Production-ready, not just snippets

### Page Structure Template
```mdx
---
title: "Clear, Action-Oriented Title"
description: "Compelling description that includes business value"
---

## Overview
Brief introduction with business context and value proposition.

<Callout type="info">
Key insight or business benefit
</Callout>

## Implementation
Step-by-step guide with clear outcomes.

<Steps>
  <Step title="Setup">
    What to do and expected result
  </Step>
</Steps>

## Code Examples
Production-ready examples in multiple languages.

<CodeGroup>
  ```javascript
  // Clear, commented code
  ```
</CodeGroup>

## Best Practices
Professional recommendations and common pitfalls.

## Next Steps
Clear progression to related topics.
```

### Content Quality Standards

#### Executive Standards
- [ ] **Business case clearly articulated** with specific ROI metrics
- [ ] **Strategic implications** addressed for product roadmap
- [ ] **Risk assessment** included with mitigation strategies  
- [ ] **Scalability planning** for growth scenarios
- [ ] **Competitive differentiation** value proposition clear

#### Technical Excellence
- [ ] **Production-ready code examples** tested and validated
- [ ] **Architecture diagrams** professionally designed and accurate
- [ ] **Security considerations** comprehensively addressed
- [ ] **Performance benchmarks** included with monitoring guidance
- [ ] **Error handling** and troubleshooting guides complete

#### Mintlify Implementation
- [ ] **MDX components** used effectively for visual hierarchy
- [ ] **Interactive elements** enhance user experience
- [ ] **Professional imagery** supports technical concepts
- [ ] **Cross-linking strategy** connects related concepts
- [ ] **Mobile responsiveness** verified for all components

## Professional Naming Conventions & SEO Strategy

### Tab Structure (SEO-Optimized URLs)
```
Tab Name → URL Slug → SEO Focus
Welcome → / → "cobalt integration platform"
Developer Guide → /developer-guide → "integration development guide"
MCPs → /multi-channel-platform → "enterprise integration platform"
API Reference → /api-reference → "integration api documentation"
Integration Catalog → /integrations → "saas integrations catalog"
Release Notes → /release-notes → "integration platform updates"
```

### Page Naming Standards

#### Developer Guide URLs
```
/developer-guide/getting-started/quick-start
/developer-guide/getting-started/core-concepts
/developer-guide/getting-started/environment-setup
/developer-guide/getting-started/first-integration

/developer-guide/platform-setup/initial-setup
/developer-guide/platform-setup/events-configuration
/developer-guide/platform-setup/api-proxies
/developer-guide/platform-setup/environment-variables
/developer-guide/platform-setup/webhooks-setup

/developer-guide/integrations/fundamentals/integration-overview
/developer-guide/integrations/configuration/integration-settings
/developer-guide/integrations/management/enabling-integrations

/developer-guide/workflows/fundamentals/workflow-overview
/developer-guide/workflows/nodes/core-nodes/start-node
/developer-guide/workflows/nodes/data-nodes/transform-node
/developer-guide/workflows/triggers/event-triggers
/developer-guide/workflows/testing/workflow-debugging

/developer-guide/auth-flows/implementation-types/hosted-flow
/developer-guide/auth-flows/customization/build-your-own
/developer-guide/auth-flows/management/re-authentication

/developer-guide/custom-apps/getting-started/custom-app-overview
/developer-guide/custom-apps/building/building-from-scratch
/developer-guide/custom-apps/deployment/publishing-apps
```

#### Integration Catalog URLs
```
/integrations/crm/salesforce-integration-setup
/integrations/crm/hubspot-integration-guide
/integrations/marketing/mailchimp-setup-guide
/integrations/support/zendesk-integration
/integrations/finance/quickbooks-integration
/integrations/integration-patterns/real-time-sync
/integrations/custom-integrations/building-custom-apps
```

#### API Reference URLs
```

```

#### MCP URLs
```
/multi-channel-platform/overview/what-is-mcp
/multi-channel-platform/implementation/account-hierarchy
/multi-channel-platform/management/organization-management
/multi-channel-platform/enterprise/single-sign-on
```

### SEO-Optimized Page Titles and Descriptions

#### Title Patterns
```mdx
---
title: "[Action] [Feature] - [Platform] Integration Guide"
description: "[Benefit] with [specific feature]. [Time estimate] setup guide with [key features]."
---

Examples:
title: "Setup Salesforce Integration - Complete CRM Integration Guide"
description: "Connect Salesforce CRM in 5 minutes. Real-time data sync, field mapping, and workflow automation included."

title: "Workflow Builder Fundamentals - Visual Integration Workflows"
description: "Build powerful integration workflows with drag-and-drop builder. Transform data, handle errors, and automate business processes."

title: "Hosted Auth Flow Implementation - Seamless User Authentication"
description: "Implement OAuth authentication in minutes with hosted flow. Secure, compliant, and user-friendly integration setup."
```

#### Meta Description Patterns
- **Include primary keyword** in first 60 characters
- **Mention time benefits** (5 minutes, hours vs months)
- **Include specific features** (real-time sync, field mapping)
- **Add value proposition** (reduce development time, eliminate maintenance)
- **Stay under 155 characters** for optimal display

### File Naming Best Practices

#### Descriptive and Hierarchical
```
✅ Good Examples:
salesforce-crm-integration-setup.mdx
workflow-conditional-node-configuration.mdx
oauth-authentication-implementation.mdx
real-time-data-synchronization-patterns.mdx

❌ Avoid:
salesforce.mdx
node.mdx
auth.mdx
sync.mdx
```

#### Keyword-Rich URLs
```
✅ SEO-Friendly:
/integrations/crm/salesforce-integration-setup
/developer-guide/workflows/nodes/data-nodes/transform-node-configuration
/api-reference/authentication/oauth-flow-implementation

❌ Generic:
/integrations/salesforce
/guide/workflows/transform
/api/auth
```

### Internal Linking Strategy

#### Cross-Reference Patterns
```mdx
<!-- Link to related concepts -->
Learn more about [workflow triggers](/developer-guide/workflows/triggers/event-triggers) 
to automate your integration processes.

<!-- Link to implementation guides -->
Ready to implement? Check our [Salesforce setup guide](/integrations/crm/salesforce-integration-setup) 
for step-by-step instructions.

<!-- Link to troubleshooting -->
Having issues? See our [debugging guide](/developer-guide/workflows/testing/workflow-debugging) 
for common solutions.
```

#### Breadcrumb Navigation
```mdx
<!-- Use consistent breadcrumb patterns -->
Developer Guide > Workflows > Nodes > Data Nodes > Transform Node

Integration Catalog > CRM > Salesforce Integration Setup

API Reference > Core APIs > Linked Accounts API
```

### Search-Optimized Content Structure

#### Heading Hierarchy
```mdx
# Primary Keyword: Page Title (H1)
## Secondary Keywords: Main Sections (H2)
### Long-tail Keywords: Subsections (H3)
#### Specific Features: Details (H4)

Example:
# Salesforce CRM Integration Setup
## Prerequisites for Salesforce Integration
### Required Salesforce Permissions
#### Admin Access Requirements
```

#### Keyword Integration
- **Primary keyword** in H1, first paragraph, and conclusion
- **Secondary keywords** in H2 headings and throughout content
- **Long-tail keywords** in H3 headings and examples
- **Related terms** naturally throughout content

## Image Guidelines
- **Path**: Always use `/images/` prefix
- **Naming**: Descriptive names like `salesforce-oauth-flow.png`
- **Alt text**: Descriptive and accessible
- **Size**: Optimize for web (under 500KB)
- **Style**: Consistent with brand colors (#9563FF, #AE87FF)

## Integration Documentation Template

### Platform-Specific Pages (Integration Catalog)
```mdx
---
title: "[Platform] Integration Setup"
description: "Complete setup guide for [Platform] integration with field mapping and common use cases"
---

## Overview
Business value and use cases for this integration.

## Prerequisites
What you need before starting.

## Setup Process
<Steps>
  <Step title="Platform Configuration">
    Steps in the third-party platform
  </Step>
  <Step title="Cobalt Configuration">
    Steps in Cobalt dashboard
  </Step>
</Steps>

## Field Mapping
Common field mappings and transformations.

## Common Use Cases
Real-world implementation examples.

## Troubleshooting
Common issues and solutions.
```

## Error Handling in Documentation
- **Always include error scenarios** in implementation guides
- **Provide specific error codes** and their meanings
- **Show error response examples** alongside success responses
- **Include debugging steps** for common issues
- **Link to logs and monitoring** sections

## Code Example Standards
- **Always use real, working examples** - no placeholder code
- **Include error handling** in all examples
- **Show multiple languages** where possible
- **Add comments explaining key concepts**
- **Use environment variables** for sensitive data
- **Include expected responses** for API calls

## Remember: This documentation represents Cobalt's enterprise-grade platform to executive decision-makers. Every element should reflect the professional quality and strategic value that CTOs and Product Managers expect when evaluating integration solutions.
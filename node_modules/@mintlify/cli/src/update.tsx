import {
  getTargetMintVersion,
  downloadTargetMint,
  SpinnerLog,
  SuccessLog,
  ErrorLog,
  addLog,
  clearLogs,
} from '@mintlify/previewing';

import { execAsync, getLatestCliVersion, getVersions, detectPackageManager } from './helpers.js';

export const update = async ({
  packageName,
  silent,
}: {
  packageName: string;
  silent?: boolean;
}) => {
  if (!silent) {
    addLog(<SpinnerLog message="updating..." />);
  }
  const { cli: existingCliVersion, client: existingClientVersion } = getVersions();
  const latestCliVersion = getLatestCliVersion(packageName);
  const latestClientVersion = await getTargetMintVersion();
  const isUpToDate =
    existingCliVersion &&
    existingClientVersion &&
    latestClientVersion &&
    latestCliVersion &&
    latestCliVersion.trim() === existingCliVersion.trim() &&
    latestClientVersion.trim() === existingClientVersion.trim();

  if (isUpToDate) {
    if (!silent) {
      addLog(<SuccessLog message="already up to date" />);
    }
    return;
  }

  if (existingCliVersion && latestCliVersion.trim() !== existingCliVersion.trim()) {
    try {
      if (!silent) {
        clearLogs();
        addLog(<SpinnerLog message={`updating ${packageName} package...`} />);
      }
      const packageManager = await detectPackageManager({ packageName });
      if (packageManager === 'pnpm') {
        await execAsync(`pnpm install -g ${packageName}@latest --silent`);
      } else {
        await execAsync(`npm install -g ${packageName}@latest --silent`);
      }
    } catch (err) {
      if (!silent) {
        clearLogs();
        addLog(<ErrorLog message={`failed to update ${packageName}@latest`} />);
      }
      return;
    }
  }

  if (latestClientVersion && latestClientVersion !== existingClientVersion) {
    try {
      if (!silent) {
        addLog(<SpinnerLog message={`updating mintlify client to ${latestClientVersion}...`} />);
      }
      await downloadTargetMint({
        targetVersion: latestClientVersion,
        existingVersion: existingClientVersion ?? null,
      });
    } catch (err) {
      if (!silent) {
        clearLogs();
        addLog(<ErrorLog message={`failed to update mintlify client to ${latestClientVersion}`} />);
      }
      return;
    }
  }

  if (!silent) {
    clearLogs();
    addLog(
      <SuccessLog message={`updated ${packageName} to the latest version: ${latestCliVersion}`} />
    );
  }
};
